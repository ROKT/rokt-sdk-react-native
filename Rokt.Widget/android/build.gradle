buildscript {
    ext.kotlin_version = '1.8.21'

    repositories {
         google()
         mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

def isNewArchitectureEnabled() {
    // The new architecture is not yet public
    // We can only use the new architecture in build time, not runtime
    return project.hasProperty("newArchEnabled") ? project.newArchEnabled.toBoolean() : false
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 32
    buildToolsVersion '30.0.3'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 2
        versionName "2.0"
        buildConfigField("boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString())
    }
    
    sourceSets {
        main {
            if (isNewArchitectureEnabled()) {
                java.srcDirs += ['src/newarch/java']
            } else {
                java.srcDirs += ['src/oldarch/java']
            }
        }
    }
    
    lintOptions {
        abortOnError false
    }
    buildFeatures {
        buildConfig = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    namespace 'com.rokt.reactnativesdk'

    kotlinOptions {
        jvmTarget = "17"
    }
}

repositories {
    mavenLocal()

    maven {
        // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
        url "$rootDir/../node_modules/react-native/android"
    }

    maven {
        // Android JSC is installed from npm
        url("$rootDir/../node_modules/jsc-android/dist")
    }

    maven {
        url "https://apps.rokt.com/msdk"
    }

    google()
    mavenCentral()
}

dependencies {
    implementation "com.facebook.react:react-native:+"  // From node_modules
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.6.1"
    implementation('com.rokt:roktsdk:4.8.1')
}

// Add the react block for code generation if new architecture is enabled
if (isNewArchitectureEnabled()) {
    react {
        jsRootDir = file("../dist/")
        codegenJavaPackageName = "com.rokt.reactnativesdk"
        libraryName = "RNRoktWidget"
        codegenDir = file("$buildDir/generated/source/codegen")
    }

    // Include the React Android project if new architecture is enabled
    project.afterEvaluate {
        android.buildTypes.all { buildType ->
            def reactAndroidProject = rootProject.allprojects.find { project ->
                project.name == "ReactAndroid"
            }
            def reactAndroidBuildType = reactAndroidProject?.buildTypes?.find { it.name == buildType.name }
            if (reactAndroidBuildType != null) {
                android.compileOptions.sourceCompatibility = reactAndroidBuildType.javaCompileOptions.sourceCompatibility
                android.compileOptions.targetCompatibility = reactAndroidBuildType.javaCompileOptions.targetCompatibility
            }
        }
    }
}
