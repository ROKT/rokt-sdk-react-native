name: Build and Package Rokt.Widget
description: Builds TypeScript, builds plugin, creates package tarball, and optionally uploads artifacts

inputs:
  upload-artifacts:
    description: Whether to upload build artifacts
    required: false
    default: "true"
  retention-days:
    description: Number of days to retain artifacts
    required: false
    default: "30"
  working-directory:
    description: Working directory for the build process
    required: false
    default: Rokt.Widget

outputs:
  package-filename:
    description: The name of the created package tarball file
    value: ${{ steps.package-tarball.outputs.filename }}

runs:
  using: composite
  steps:
    - name: Install dependencies
      shell: bash
      run: npm ci
      working-directory: ${{ inputs.working-directory }}

    - name: Run linting
      shell: bash
      run: npm run lint
      working-directory: ${{ inputs.working-directory }}

    - name: Build TypeScript
      shell: bash
      run: npm run build
      working-directory: ${{ inputs.working-directory }}

    - name: Build plugin
      shell: bash
      run: npm run build:plugin
      working-directory: ${{ inputs.working-directory }}

    - name: Create package tarball
      id: package-tarball
      shell: bash
      run: |
        npm pack
        PACKAGE_FILE=$(ls *.tgz | head -1)
        echo "filename=$PACKAGE_FILE" >> $GITHUB_OUTPUT

        # Extract version from package.json for artifact naming
        VERSION=$(node -p "require('./package.json').version")
        echo "version=$VERSION" >> $GITHUB_OUTPUT

        # Create a more descriptive artifact name
        ARTIFACT_NAME="rokt-widget-v${VERSION}-${GITHUB_SHA::8}"
        echo "artifact-name=$ARTIFACT_NAME" >> $GITHUB_OUTPUT
      working-directory: ${{ inputs.working-directory }}

    - name: Create artifact metadata
      shell: bash
      run: |
        cat > artifact-info.txt << EOF
        Package: ${{ steps.package-tarball.outputs.filename }}
        Version: ${{ steps.package-tarball.outputs.version }}
        Commit: ${{ github.sha }}
        Branch: ${{ github.ref_name }}
        Workflow: ${{ github.workflow }}
        Build Date: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
        EOF
      working-directory: ${{ inputs.working-directory }}

    - name: Upload package artifact
      if: ${{ inputs.upload-artifacts == 'true' }}
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 #v4.6.2
      with:
        name: ${{ steps.package-tarball.outputs.artifact-name }}
        path: |
          ${{ inputs.working-directory }}/${{ steps.package-tarball.outputs.filename }}
          ${{ inputs.working-directory }}/artifact-info.txt
        retention-days: ${{ inputs.retention-days }}

    - name: Create artifact summary
      if: ${{ inputs.upload-artifacts == 'true' }}
      shell: bash
      run: |
        echo "## ðŸ“¦ Package Artifact Created" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Package:** ${{ steps.package-tarball.outputs.filename }}" >> $GITHUB_STEP_SUMMARY
        echo "**Version:** ${{ steps.package-tarball.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "**Artifact Name:** ${{ steps.package-tarball.outputs.artifact-name }}" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "The package artifact has been uploaded and is available for download in the Actions tab." >> $GITHUB_STEP_SUMMARY
