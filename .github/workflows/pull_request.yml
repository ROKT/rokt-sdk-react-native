name: React Native Pull Request

on:
  pull_request:

permissions:
  contents: read
  pull-requests: read
  checks: write
  id-token: write

jobs:
  trunk-check:
    name: Trunk code check
    runs-on: ubuntu-latest
    permissions:
      checks: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Trunk Check
        uses: trunk-io/trunk-action@75699af9e26881e564e9d832ef7dc3af25ec031b # v1.2.4
        with:
          check-mode: pull_request

  build-package:
    name: Build and Package Rokt.Widget
    needs: trunk-check
    runs-on: ubuntu-latest
    outputs:
      package-filename: ${{ steps.build-and-package.outputs.package-filename }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: Rokt.Widget/package-lock.json

      - name: Build and Package
        id: build-and-package
        uses: ./.github/actions/build-package
        with:
          upload-artifacts: "true"
          retention-days: "7"

      - name: Display artifact information
        shell: bash
        run: |
          echo "## ðŸ“¦ Build Artifacts Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Package Filename:** ${{ steps.build-and-package.outputs.package-filename }}" >> $GITHUB_STEP_SUMMARY
          echo "**Artifact Pattern:** rokt-widget-v*-*" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Available Artifacts:" >> $GITHUB_STEP_SUMMARY
          echo "- Package tarball with version and commit hash" >> $GITHUB_STEP_SUMMARY
          echo "- Build metadata file" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Artifacts can be downloaded from the Actions tab or used by subsequent jobs." >> $GITHUB_STEP_SUMMARY

  build-test-ios:
    name: Build & Test iOS
    needs: [trunk-check, build-package]
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Download artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          pattern: rokt-widget-v*-*
          path: Rokt.Widget/

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 18

      - name: Build & Test iOS
        id: build-ios
        uses: ./.github/actions/build-ios
        with:
          upload-artifacts: "true"
          retention-days: "7"

      - name: Display iOS artifact information
        shell: bash
        run: |
          echo "## ðŸ“± iOS Build Artifacts Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**App Bundle:** ${{ steps.build-ios.outputs.app-filename }}" >> $GITHUB_STEP_SUMMARY
          echo "**Artifact Pattern:** rokt-ios-v*-*" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Available Artifacts:" >> $GITHUB_STEP_SUMMARY
          echo "- iOS Simulator app bundle (zipped)" >> $GITHUB_STEP_SUMMARY
          echo "- Test results (JUnit XML)" >> $GITHUB_STEP_SUMMARY
          echo "- Build metadata file" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "iOS artifacts can be downloaded from the Actions tab." >> $GITHUB_STEP_SUMMARY

  build-test-android:
    name: Build & Test Android
    needs: [trunk-check, build-package]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Download artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          pattern: rokt-widget-v*-*
          path: Rokt.Widget/

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 18

      - name: Build & Test Android
        id: build-android
        uses: ./.github/actions/build-android
        with:
          upload-artifacts: "true"
          retention-days: "7"

      - name: Display Android artifact information
        shell: bash
        run: |
          echo "## ðŸ“± Android Build Artifacts Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**APK Filename:** ${{ steps.build-android.outputs.apk-filename }}" >> $GITHUB_STEP_SUMMARY
          echo "**Artifact Pattern:** rokt-android-v*-*" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Available Artifacts:" >> $GITHUB_STEP_SUMMARY
          echo "- Android APK with version and commit hash" >> $GITHUB_STEP_SUMMARY
          echo "- Build metadata file" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Android artifacts can be downloaded from the Actions tab." >> $GITHUB_STEP_SUMMARY

  pr-notify:
    if: >
      github.event_name == 'pull_request' &&
      github.event.pull_request.draft == false
    needs: [build-test-ios, build-test-android]
    name: Notify GChat
    uses: ROKT/rokt-workflows/.github/workflows/oss_pr_opened_notification.yml@main
    secrets:
      gchat_webhook: ${{ secrets.GCHAT_PRS_WEBHOOK }}
